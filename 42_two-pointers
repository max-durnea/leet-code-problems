class Solution:
    def trap(self, height: List[int]) -> int:
        #solution using 2 pointers
        left=0
        right=len(height)-1
        maxLeft=height[left]
        maxRight=height[right]
        max_volume=0
        while(left<right):
            if(maxLeft<maxRight):
                volume=maxLeft-height[left]
                if volume>0:
                    max_volume+=volume
                left+=1
                if maxLeft<height[left] :
                    maxLeft=height[left]
                
            else:
                volume=maxRight-height[right]
                if volume > 0:
                    max_volume+=volume
                right-=1
                if maxRight<height[right] :
                    maxRight=height[right]
        return max_volume
                
